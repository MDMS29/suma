diseño modal

<Dialog  visible={modalEliminar} style={{ width: '32rem' }} breakpoints={{ '960px': '75vw', '641px': '90vw' }} modal onHide={esconderModalEliminar} footer={deleteProductDialogFooter}>
            <div className="flex flex-col">
                <div className="flex justify-center pb-4">
                    <i className="pi pi-exclamation-triangle" style={{ fontSize: '5rem' }} />
                </div>
                <p className='text-2xl text-center'>
                    {eliminarUsuario.estado_usuario == "ACTIVO" ? "¿Estás seguro de que deseas inactivar este usuario?" : "¿Deseas restaurar este usuario?"}
                </p>
            </div>
            <div className="flex justify-center pt-4">
                <Button label="Cancelar" onClick={esconderModalEliminar} className='px-4 p-2 mx-2 rounded-md font-semibold 
            bg-neutralGray hover:bg-hoverGray transition duration-300 ease-in-out' />
                <Button label="Eliminar" onClick={clickEliminarUsuario} className="px-4 p-2 mx-2 rounded-md font-semibold
            bg-secundaryYellow hover:bg-primaryYellow transition duration-300 ease-in-out" />
            </div>
        </Dialog>

------------------------------------------------------------------------------------------------------------------------------------------------------
 {/* <div className="flex">
                <div>icon</div>
                <select filter className="border-1 h-10 rounded-md px-2 py-2 border-gray-300">
                  <option disabled>-- Selecione un icono --</option>
                  {Array.isArray(selectedIcon) && selectedIcon.length > 0 ? (
                    selectedIcon.map((e) => (
                      <option key={e.name} >
                        <img src={e.link} alt="" width={5} height={5} />
                        <i className={e.name}></i>
                        {e.description}
                      </option>
                    ))
                  ) : (
                    <option value="">No hay datos disponibles</option>
                  )}
                </select>
              </div> */}
------------------------------------------------------------------------------------------------------------------------------------------------------
<div className="flex">
                  <div>icon</div>
                  <select filter className="border-1 h-10 rounded-md px-2 py-2 border-gray-300">
                    <option disabled>-- Selecione un icono --</option>
                    {Array.isArray(iconos) && iconos.length > 0 ? (
                      iconos.map((e) => (
                        <option key={e.name} >
                          {e.description}, {e.link}
                        </option>
                      ))
                    ) : (
                      <option value="">No hay datos disponibles</option>
                    )}
                  </select>
                </div>

------------------------------------------------------------------------------------------------------------------------------------------------------
{/* <div className="flex items-center gap-2">
                <div className="card flex justify-content-center w-full">
                  <Dropdown
                    value={ModulosAgg.icono}
                    onChange={(e) => handleChangeModulos(e)}
                    options={
                      Array.isArray(iconos) && iconos.length > 0
                        ? iconos.map((e) => ({
                          label: e.description,
                          value: e.name,
                        }))
                        : [{ label: "No hay datos disponibles", value: "" }]
                    }
                    optionLabel="label"
                    optionValue="value"
                    placeholder="Seleccione un icono"
                    filter
                    name="icono"
                    className="w-full md:w-14rem h-10 rounded-lg"
                  />
                </div>
                <i className={`pi ${ModulosAgg?.icono} mx-3`}></i>
              </div> */}
------------------------------------------------------------------------------------------------------------------------------------------------------

----------------------------PRODUCTOS----------------------------------

- CRITICO es si un producto es solicitado y es dificil de conseguir, y demora en llegar
- COMPUESTO si un producto se compone de otros prodcutos (un plato de comida) (por ahora no se dieron ejemplos)

- los productos se borrar? ok
- esta el id_marca pero mostrara el nombre de la marca? ok
- referencia es el nombre del producto? numero codigo
- description es una observacion? es el nombre 
- critico seria ESTADO CRITICO: si o no? ok
- inventariable seria si o no? ok
- foto se muestra en tabla? y los que no entonces dira no fotoq?  ok
- compuesto seria si o no? ok
- ficha es si tiene la ficha tecnica si o no? ok

- marca, familia, unidad, tipo de producto, producto critico, Inventariable, Producto Compuesto, Ficha, Certificado es SELECT
